@model BrassDuckFF.Models.DB.Player

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Player</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.playerID)

        <div class="form-group">
            @Html.LabelFor(model => model.playername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.playername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.playername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.team, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.team, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.team, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.position, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.position, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.weeknum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.weeknum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.weeknum, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opponent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opponent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opponent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passyrds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passyrds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passyrds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passtds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passtds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passtds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passints, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passints, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rushyrds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushyrds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushyrds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rushtds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushtds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushtds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recrec, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.recrec, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recrec, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recyrds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.recyrds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recyrds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rectds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rectds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rectds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.defsack, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.defsack, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.defsack, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.defints, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.defints, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.defints, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deftds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.deftds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deftds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deffumrec, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.deffumrec, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deffumrec, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kfgmade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kfgmade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kfgmade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kfgattempt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kfgattempt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kfgattempt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kexpmade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kexpmade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kexpmade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kexpattempt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kexpattempt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kexpattempt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
