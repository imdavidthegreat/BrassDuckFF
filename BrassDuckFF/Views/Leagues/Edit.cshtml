@model BrassDuckFF.Models.League

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>League</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.leagueID)

        <div class="form-group">
            @Html.LabelFor(model => model.leaguename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.leaguename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.leaguename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.commissID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.commissID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.commissID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passyrdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passyrdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passyrdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passtdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passtdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passtdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.passintsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.passintsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.passintsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rushyrdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushyrdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushyrdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rushtdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rushtdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rushtdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recrecval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.recrecval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recrecval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recyrdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.recyrdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recyrdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.rectdsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rectdsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rectdsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.defsackval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.defsackval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.defsackval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.defintsval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.defintsval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.defintsval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deftds, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.deftds, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deftds, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deffumrecval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.deffumrecval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deffumrecval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kfgmadeval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kfgmadeval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kfgmadeval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kfgattemptval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kfgattemptval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kfgattemptval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kexpmadeval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kexpmadeval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kexpmadeval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.kexpattemptval, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.kexpattemptval, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.kexpattemptval, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
